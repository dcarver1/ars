tm_shape(shp=points)+
tm_dots("points")
tm_shape(shp=points)+
tm_dots(points)
tm_shape(shp=points)
latLonWGS <- sosWGS %>%
na.omit() %>%
mutate(lon = as.numeric(as.character(sosWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(sosWGS$LATITUDE_DECIMAL)))
sosWGS <- sosData %>%
filter(GPS_DATUM=="WGS84") %>%
na.omit()
latLonWGS <- sosWGS %>%
mutate(lon = as.numeric(as.character(sosWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(sosWGS$LATITUDE_DECIMAL)))
latLonWGS
latLonWGS <- sosWGS %>%
mutate(lon = as.numeric(as.character(sosWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(sosWGS$LATITUDE_DECIMAL)))
points <- SpatialPointsDataFrame(data = sosWGS,
coords = cbind(latLonWGS$lon, latLonWGS$lat),
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
nrow(sosWGS)
arrange(desc(latLonWGS))
arrange(desc(latLonWGS$lon))
arrange(desc(latLonWGS$LATITUDE))
arrange(desc(latLonWGS$LATITUDE_DECIMAL))
dplyr::arrange(desc(latLonWGS$lon))
order(desc(latLonWGS$lon))
View(latLonWGS)
coords <- cbind(latLonWGS$lon, latLonWGS$lat)
nrow(coords)
nrow(coords)
nrow(sosWGS)
points <- SpatialPointsDataFrame(data = sosWGS,
coords = cbind(latLonWGS$lon, latLonWGS$lat),
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
latLonWGS <- sosWGS %>%
mutate(lon = as.numeric(as.character(sosWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(sosWGS$LATITUDE_DECIMAL))) %>%
filter(!is.na(lon)) %>%
filter(!is.na(lat))
coords <- cbind(latLonWGS$lon, latLonWGS$lat)
nrow(coords)
points <- SpatialPointsDataFrame(data = latLonWGS,
coords = cbind(latLonWGS$lon, latLonWGS$lat),
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
tm_shape(shp=points)+
tm_dots(points)
tm_shape(shp=points)+
tm_dots()
knitr::opts_chunk$set(echo = TRUE)
# install.packages('tmap')
# install.packages('gdalUtils')
# install.packages('ggmap')
library(ggmap)
library(raster)
library(sf)
library(dplyr)
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
datumCount <- sosData %>%
group_by(GPS_DATUM) %>%
summarise(count = n())
datumCount
sosWGS <- sosData %>%
filter(GPS_DATUM=="WGS84") %>%
na.omit()
class(sosWGS$LATITUDE_DECIMAL)
shortWGS <- slice(sosWGS, 1:5)
shortWGS <- shortWGS %>%
mutate(lon = as.numeric(as.character(shortWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(shortWGS$LATITUDE_DECIMAL)))
shortWGS
###trying the process with ggplot
corvallis <- c(lon = -123.2620, lat = 44.5646)
# Add a maptype argument to get a satellite map
corvallis_map_sat <- get_map(corvallis, zoom = 3)
#point date set
coords <- cbind(as.numeric(shortWGS$LONGITUDE_DECIMAL), as.numeric(shortWGS$LATITUDE_DECIMAL))
coords
plot(coords)
names(sosWGS)
range(sosWGS$LATITUDE)
# install.packages('tmap')
# install.packages('gdalUtils')
# install.packages('ggmap')
library(ggmap)
library(raster)
library(sf)
library(dplyr)
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
datumCount <- sosData %>%
group_by(GPS_DATUM) %>%
summarise(count = n())
datumCount
sosWGS <- sosData %>%
filter(GPS_DATUM=="WGS84") %>%
na.omit()
class(sosWGS$LATITUDE_DECIMAL)
shortWGS <- slice(sosWGS, 1:5)
shortWGS <- shortWGS %>%
mutate(lon = as.numeric(as.character(shortWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(shortWGS$LATITUDE_DECIMAL)))
shortWGS
###trying the process with ggplot
corvallis <- c(lon = -123.2620, lat = 44.5646)
# Add a maptype argument to get a satellite map
corvallis_map_sat <- get_map(corvallis, zoom = 3)
#point date set
coords <- cbind(as.numeric(shortWGS$LONGITUDE_DECIMAL), as.numeric(shortWGS$LATITUDE_DECIMAL))
coords
plot(coords)
# Edit to display satellite map
ggmap(corvallis_map_sat) +
geom_point(aes(lon, lat), data = shortWGS)
plot(shortWGS)
# install.packages('tmap')
# install.packages('gdalUtils')
# install.packages('ggmap')
library(ggmap)
library(raster)
library(sf)
library(dplyr)
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
datumCount <- sosData %>%
group_by(GPS_DATUM) %>%
summarise(count = n())
sosWGS <- sosData %>%
filter(GPS_DATUM=="WGS84") %>%
na.omit()
shortWGS <- slice(sosWGS, 1:5)
shortWGS <- shortWGS %>%
mutate(lon = as.numeric(as.character(shortWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(shortWGS$LATITUDE_DECIMAL)))
###trying the process with ggplot
corvallis <- c(lon = -123.2620, lat = 44.5646)
# Add a maptype argument to get a satellite map
corvallis_map_sat <- get_map(corvallis, zoom = 3)
#point date set
coords <- cbind(as.numeric(shortWGS$LONGITUDE_DECIMAL), as.numeric(shortWGS$LATITUDE_DECIMAL))
# Edit to display satellite map
ggmap(corvallis_map_sat) +
geom_point(aes(lon, lat), data = shortWGS)
# Add source and maptype to get toner map from Stamen Maps
corvallis_map_bw <- get_map(corvallis, zoom = 13, source = 'stamen', maptype = 'toner')
nrow(sosWGS)
names(sosWGS)
latLonWGS <- sosWGS %>%
mutate(lon = as.numeric(as.character(sosWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(sosWGS$LATITUDE_DECIMAL))) %>%
filter(!is.na(lon)) %>%
filter(!is.na(lat))
coords <- cbind(latLonWGS$lon, latLonWGS$lat)
nrow(coords)
points <- SpatialPointsDataFrame(data = latLonWGS,
coords = cbind(latLonWGS$lon, latLonWGS$lat),
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
str(points)
)
nrow(sosWGS)
names(sosWGS)
latLonWGS <- sosWGS %>%
mutate(lon = as.numeric(as.character(sosWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(sosWGS$LATITUDE_DECIMAL))) %>%
filter(!is.na(lon)) %>%
filter(!is.na(lat))
coords <- cbind(latLonWGS$lon, latLonWGS$lat)
nrow(coords)
points <- SpatialPointsDataFrame(data = latLonWGS,
coords = cbind(latLonWGS$lon, latLonWGS$lat),
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
sosWGS$LATITUDE_DECIMAL
map <- us_map()
library(gdalUtils)
library(tmap)
install.packages('usmap')
library(usmap)
install.packages('maps')
library(maps)
tmap_mode("view")
qtm(shp=points)
install.packages("maps")
knitr::opts_chunk$set(echo = TRUE)
library(gdalUtils)
library(tmap)
tmap_mode("view")
qtm(shp=points)
tm_shape(shp=points)+
tm_dots()
# install.packages('tmap')
# install.packages('gdalUtils')
# install.packages('ggmap')
library(ggmap)
install.packages('ggmap')
# install.packages('tmap')
# install.packages('gdalUtils')
# install.packages('ggmap')
# library(ggmap)
library(raster)
library(sf)
library(dplyr)
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
datumCount <- sosData %>%
group_by(GPS_DATUM) %>%
summarise(count = n())
sosWGS <- sosData %>%
filter(GPS_DATUM=="WGS84") %>%
na.omit()
shortWGS <- slice(sosWGS, 1:5)
shortWGS <- shortWGS %>%
mutate(lon = as.numeric(as.character(shortWGS$LONGITUDE_DECIMAL)),
lat = as.numeric(as.character(shortWGS$LATITUDE_DECIMAL)))
#
# ###trying the process with ggplot
# corvallis <- c(lon = -123.2620, lat = 44.5646)
#
# # Add a maptype argument to get a satellite map
# corvallis_map_sat <- get_map(corvallis, zoom = 3)
#
# #point date set
# coords <- cbind(as.numeric(shortWGS$LONGITUDE_DECIMAL), as.numeric(shortWGS$LATITUDE_DECIMAL))
#
#
# # Edit to display satellite map
# ggmap(corvallis_map_sat) +
#   geom_point(aes(lon, lat), data = shortWGS)
# install.packages('tmap')
# install.packages('gdalUtils')
# install.packages('ggmap')
# library(ggmap)
library(raster)
library(sf)
library(dplyr)
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
datumCount <- sosData %>%
group_by(GPS_DATUM) %>%
summarise(count = n())
sosWGS <- sosData %>%
filter(GPS_DATUM=="WGS84") %>%
na.omit()
#
# shortWGS <- slice(sosWGS, 1:5)
# shortWGS <- shortWGS %>%
#   mutate(lon = as.numeric(as.character(shortWGS$LONGITUDE_DECIMAL)),
#          lat = as.numeric(as.character(shortWGS$LATITUDE_DECIMAL)))
#
# ###trying the process with ggplot
# corvallis <- c(lon = -123.2620, lat = 44.5646)
#
# # Add a maptype argument to get a satellite map
# corvallis_map_sat <- get_map(corvallis, zoom = 3)
#
# #point date set
# coords <- cbind(as.numeric(shortWGS$LONGITUDE_DECIMAL), as.numeric(shortWGS$LATITUDE_DECIMAL))
#
#
# # Edit to display satellite map
# ggmap(corvallis_map_sat) +
#   geom_point(aes(lon, lat), data = shortWGS)
install.packages('maps')
library(maps)
map('state', fill = TRUE, col = palette())
install.packages('usmap')
library(usmap)
usmap::fips()
usmap::map_with_data()
df <- us_map(regions = "states")
plot(df)
class(df)
str(df)
str(df)
coords <- df %>% select(long, lat)
coords
df <- us_map(regions = "states")
names(df)
coords <- df %>% select(long, lat)
nrow(coords)
names(coords)
coords1 <- df %>% select(long, lat)
df <- data.frame(lon=c(119.4,119.4,119.4,119.5,119.5),
lat=c(-5.192,-5.192,-5.187,-5.187,-5.191))
require(sp)
spdf <- SpatialPolygonsDataFrame(
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=df)
), ID=1)
)
),
data=data.frame(a=1)
)
plot(spdf)
spdf <- SpatialPolygonsDataFrame(
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=df)
), ID=1)
)
),
#data=data.frame(a=1)
)
data.frame(a=1)
states <- us_map(regions = "states")
coords1 <- states %>%
select(long, lat)
spdf <- SpatialPolygonsDataFrame(
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=coords1)
), ID=1)
)
),
data= states
)
spdf <- SpatialPolygonsDataFrame(
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=coords1)
))
)
),
data= states
)
spdf <- SpatialPolygonsDataFrame(
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=coords1)
), ID=1)
)
),
data= states
)
states <- us_map(regions = "states")
names(states)
glimpse(states)
coords1 <- states %>%
select(long, lat, full)
spdf <- SpatialPolygonsDataFrame(
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=coords1)
), ID=full)
)
),
data= states
)
Polygons(srl=list(
Polygon(coords=coords1)
), ID=full)
glimpse(states)
coords1 <- states %>%
select(long, lat, group)
Polygons(srl=list(
Polygon(coords=coords1)
), ID=group)
Polygons(srl=list(
Polygon(coords=coords1)
), ID=12)
coords1 <- states %>%
select(long, lat)
Polygons(srl=list(
Polygon(coords=coords1)
), ID=12)
Polygons(srl=list(
Polygon(coords=coords1)
), ID='state')
Polygons(srl=list(
Polygon(coords=coords1)
), ID="state"")
)
),
data= states
)
spdf <- SpatialPolygonsDataFrame(
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=coords1)
), ID="state"")
spdf <- SpatialPolygonsDataFrame(
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=coords1)
), ID="state")
)
),
data= states
)
Polygons(srl=list(
Polygon(coords=coords1)
), ID='state')
Polygon1 <- Polygons(srl=list(
Polygon(coords=coords1)
), ID='state')
class(Polygon1)
str(Polygon1)
SpatialPolygonsDataFrame(states)
SpatialPolygons(states)
Polygon1 <- Polygons(srl=list(
Polygon(coords=coords1)
), ID='state')
SpatialPolygons(
Srl=list(
Polygons(srl=list(
Polygon(coords=coords1)
), ID="state")
)
)
plot(SpatialPolygons)
library(tmaptools)
xx <- readShapePoly(system.file("H:\ne_110m_admin_1_states_provinces_lines\ne_110m_admin_1_states_provinces_lines.shp", package="maptools")[1]))
xx <- readShapePoly(system.file("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp", package="maptools")[1])
library(tmaptools)
tmaptools::read_shape("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp")
shape <- read_shape("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp")
class(shape)
plot(shape)
str(shape)
shape2 <- read_sf("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp")
class(shape2)
plot(shape2)
shape2 <- read_sf("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp") %>%
st_transform(4326)
str(shape2)
View(shape2)
names(shape2)
res <- over(points, shape2)
res <- over(points, shape)
class(shape)
shape <- as(shape, "spatial")
shape <- as(shape, "Spatial")
class(shape)
res <- over(points, shape)
res
shape <- read_shape("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp") %>%
st_transform(4326)
shape <- as(shape, "Spatial")
res <- over(points, shape)
shape <- read_shape("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp") %>%
st_transform(CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
shape <- read_shape("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp") %>%
st_transform(4326)
shape <- as(shape, "Spatial")
str(shape)
str(shape, max.level = 2)
shape <- read_shape("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp")
shape <- as(shape, "Spatial")
str(shape, max.level = 2)
shape@proj4string
res <- over(points, shape)
shape@proj4string
points <- SpatialPointsDataFrame(data = latLonWGS,
coords = cbind(latLonWGS$lon, latLonWGS$lat),
proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
res <- over(points, shape)
res
shape <- read_shape("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp")
shape <- as(shape, "Spatial")
res <- over(points, shape)
res
res <- over( shape, points)
res
res <- over(  points, shape,)
res <- over(  points, shape)
res
str(shape, max.level = 2)
plot(shape)
str(shape, max.level = 2)
shape <- read_shape("H:\\ne_110m_admin_1_states_provinces_lines\\ne_110m_admin_1_states_provinces_lines.shp")
shape
shape <- read_shape("H:\\states\\ne_110m_admin_1_states_provinces.shp")
shape
shape <- as(shape, "Spatial")
str(shape, max.level = 2)
plot(shape)
res <- over(  points, shape)
res
res %>%
group_by(name) %>%
summarise(count = n())
st_join(points, shape, join = st_intersects)
shape <- read_shape("H:\\states\\ne_110m_admin_1_states_provinces.shp")
st_join(points, shape, join = st_intersects)
shape <- as(shape, "Spatial")
plot(shape)
str(shape, max.level = 2)
res %>%
group_by(name) %>%
summarise(count = n())
shape@polygons
str(shape, max.level = 2)
shape@data
res
res %>%
group_by(name) %>%
summarise(count = n())
res
res %>%
group_by(name) %>%
summarise(count = n())
oo <- merge(shape, count, by=name)
shape@name <- shape@data$name
oo <- merge(shape, count, by=shape@data$name)
oo <- sp::merge(shape, count, by=shape@data$name)
oo <- sp::merge(shape, count, by=name)
